{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+OAmBeA,EAhBA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAClC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BACIG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGvB,4BAAIR,IACJ,qBAAKG,UAAWC,IAAMH,MAAMQ,IAAKR,EAAOS,IAAI,SCiDzCC,G,MAzDH,WACR,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwBJ,mBAAS,WAAjC,mBAAMK,EAAN,KAAYC,EAAZ,KAEJC,qBAAW,WACRC,MACA,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACQC,MAAM,mCAAD,OAAoCL,EAApC,mBAZb,WAYa,oBAXb,qCAUA,cACTM,EADS,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGfX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJF,2CAAH,qDAiBX,OACI,sBAAKvB,UAAU,MAAf,UACI,uBAAM0B,SARG,SAAAC,GACdA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKsBb,UAAU,cAArC,UACI,uBACIA,UAAU,aACT6B,KAAK,OACLC,MAAOlB,EACPmB,SAjBD,SAAAJ,GACjBd,EAAUc,EAAEK,OAAOF,UAkBN,wBAAQ9B,UAAU,gBAAgB6B,KAAK,SAAvC,uBAIJ,qBAAK7B,UAAU,UAAf,SACCU,EAAQP,KAAI,SAAAD,GAAM,OAClB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAO+B,MACrBpC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO+B,iBCtClBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.54a030f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n\r\nconst Recipe = ({title,calories,image,ingredients}) => {\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol>\r\n               {ingredients.map(ingredient =>(\r\n                   <li>{ingredient.text}</li>\r\n               ))}\r\n             </ol>\r\n            <p>{calories}</p>\r\n            <img className={style.image}src={image} alt=\"\" />\r\n        </div>   \r\n    );\r\n\r\n\r\n}\r\nexport default Recipe;","import React,{useEffect,useState} from \"react\";\nimport Recipe from './Recipe';\nimport \"./App.css\";\n\n\nconst App = () =>   {\n    const APP_ID = \"a0e84cb5\";\n    const APP_KEY =\"716764e0170cb9db7a07d3f8388cfd33\";\n    \n    const [recipes, setRecipes] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const[query,setQuery] = useState('chicken');\n\nuseEffect( () => {\n   getRecipes();\n}, [query]);\n\nconst getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n};\n\nconst updateSearch = e => {\n    setSearch(e.target.value);\n   \n};\n    const getSearch = e => {\n        e.preventDefault();\n        setQuery(search);\n        setSearch('');\n    }\n\n     return (\n         <div className=\"App\">\n             <form onSubmit={getSearch} className=\"search-form\">\n                 <input\n                     className=\"search-bar\"\n                      type=\"text\" \n                      value={search}\n                      onChange={updateSearch} \n                      />\n                 <button className=\"search-button\" type=\"submit\">\n                     Search\n                 </button>\n             </form>\n             <div className=\"recipes\">\n             {recipes.map(recipe => (\n              <Recipe\n              key={recipe.recipe.label} \n              title={recipe.recipe.label} \n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              ingredients={recipe.recipe.ingredients}\n              /> \n             ))}\n             </div>\n         </div>\n     );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__XeJNU\",\"image\":\"recipe_image__1MKqg\"};"],"sourceRoot":""}